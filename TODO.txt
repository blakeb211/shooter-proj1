Coding Guidelines
  { } uniform initialization to prevent narrowing conversions 
  dont use auto with {}
  in class initialization with braces
  generic functions
  using aliases, e.g. using vec2 = Vector2f
  const noexcept

Framework
  use SFML 

Collision Detection
  sfml AABB
  quadtree

Game Entity Management
    Components
        no inheritance - iteration #1
        virtual funcs - iteration #2
        pure virtuals (interfaces) - iteration #3

 Naming Conventions 
  functions
  private vars
  local vars

Framerate independence w\ slices

Actions
Command Pattern

FEATURES
  Paths
  Voxels - enemies can be destroyed
  Load levels from files
        ***Convenient enemy placement on screen 
        ***entities removed when go off screen
        ***Need Level Loading code - enemies, enemy paths, paths
        ***Need Wall Building and convenient placement
        ***Need Player art
        ***Refactor out Entity struct 
        ***collision code  AABB
        ***animations

  Multiple weapons
  Enemies Avoid one Another

Entity
  pos x, y
  list<Voxel>
  entity_id

Voxel
  relative x, y, theta 
  color
 
Actions
  Create
  Move
  Collide
  Die

--------wall
     data:
     fxns:

------wall1 stuff bounces off - does not take damage
------wall2 takes damage
--------bullet
-----bullet1 straight shot
-----bullet2 moves in sine wave
-----bullet3 homing bullet
--------player
--------enemy1
--------enemy2
--------enemy3
--------enemy4

--------explosion
        currTimer
        maxTimer

sounds
  when bullet fires
  bullet hits enemy
  bullet bounces off wall
  bullet destructs on wall
