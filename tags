B1	proto1.cpp	38
B1	proto1.cpp~	31
B2	proto1.cpp	42
B2	proto1.cpp~	35
Bullet	proto1.cpp	35
Bullet	proto1.cpp~	28
Draw	proto1.cpp	/^    virtual void Draw() { }$/
Draw	proto1.cpp~	/^    virtual void Draw() { }$/
E1	proto1.cpp	54
E1	proto1.cpp~	47
E2	proto1.cpp	57
E2	proto1.cpp~	50
E3	proto1.cpp	60
E3	proto1.cpp~	53
E4	proto1.cpp	63
E4	proto1.cpp~	56
Enemy	proto1.cpp	51
Enemy	proto1.cpp~	44
Entity	main.cpp~	5
Entity	proto1.cpp	24
Entity	proto1.cpp~	19
Example	olcExampleProgram.cpp	4
Example	olcExampleProgram.cpp	/^	Example()$/
Example	olcExampleProgram.cpp~	4
Example	olcExampleProgram.cpp~	/^	Example()$/
Example	proto1.cpp~	78
Example	proto1.cpp~	/^	Example()$/
Game	main.cpp~	9
Mmain.cpp~	main.cpp~	/^int main() {$/
MolcExampleProgram.cpp	olcExampleProgram.cpp	/^int main()$/
MolcExampleProgram.cpp~	olcExampleProgram.cpp~	/^int main()$/
Mproto1.cpp	proto1.cpp	/^int main()$/
Mproto1.cpp~	proto1.cpp~	/^int main()$/
Msfml_test.cpp	sfml_test.cpp	/^int main() {$/
Msfml_test.cpp~	sfml_test.cpp~	/^int main() {$/
OLC_PGE_APPLICATION	olcExampleProgram.cpp	1
OLC_PGE_APPLICATION	olcExampleProgram.cpp~	1
OLC_PGE_APPLICATION	proto1.cpp~	1
OnUserCreate	olcExampleProgram.cpp	/^	bool OnUserCreate() override$/
OnUserCreate	olcExampleProgram.cpp~	/^	bool OnUserCreate() override$/
OnUserCreate	proto1.cpp~	/^	bool OnUserCreate() override$/
OnUserUpdate	olcExampleProgram.cpp	/^	bool OnUserUpdate(float fElapsedTime) override$/
OnUserUpdate	olcExampleProgram.cpp~	/^	bool OnUserUpdate(float fElapsedTime) override$/
OnUserUpdate	proto1.cpp~	/^	bool OnUserUpdate(float fElapsedTime) override$/
Player	proto1.cpp	46
Player	proto1.cpp~	39
Update	main.cpp~	/^  void Update() { }$/
Update	proto1.cpp	/^    virtual void Update(float fElapsed) { \/* check/
Update	proto1.cpp~	/^    virtual void Update(float fElapsed) { \/* check/
UpdateAll	main.cpp~	/^  void UpdateAll() {$/
Vec3	proto1.cpp	7
Vec3	proto1.cpp~	11
Vector3	proto1.cpp~	7
Vox	proto1.cpp	/^    const list<Voxel>& Vox() const { return vox; }/
Voxel	proto1.cpp	17
Voxel	proto1.cpp~	13
Wall	proto1.cpp	68
Wall1	proto1.cpp	70
Wall2	proto1.cpp	72
blockHeight	proto1.cpp	11
blockWidth	proto1.cpp	11
color	proto1.cpp	19
color	proto1.cpp~	15
entities	main.cpp~	10
gameOver	proto1.cpp	13
gameOver	proto1.cpp~	75
health	proto1.cpp	20
health	proto1.cpp~	16
isIntersecting	main.cpp~	/^template<class T1, class T2> bool isIntersecting(T/
isIntersecting	proto1.cpp	/^template<class T1, class T2> bool isIntersecting(T/
isIntersecting	proto1.cpp~	/^template<class T1, class T2> bool isIntersecting(T/
pause	proto1.cpp	14
pause	proto1.cpp~	76
pixelSize	proto1.cpp~	74
pos	proto1.cpp	18
pos	proto1.cpp~	14
screenHeight	proto1.cpp	10
screenHeight	proto1.cpp~	73
screenWidth	proto1.cpp	10
screenWidth	proto1.cpp~	72
shape	proto1.cpp	21
std	main.cpp~	3
std	proto1.cpp~	5
testCollision	main.cpp~	/^void testCollision(Entity &e1, Entity &e2) {$/
testCollision	proto1.cpp	/^void testCollision(Entity &e1, Entity &e2) {$/
testCollision	proto1.cpp~	/^void testCollision(Entity &e1, Entity &e2) {$/
theta	proto1.cpp~	8
vox	proto1.cpp	31
vox	proto1.cpp~	25
x	proto1.cpp~	8
y	proto1.cpp~	8
~Entity	proto1.cpp	/^    virtual ~Entity() { }  $/
~Entity	proto1.cpp~	/^    virtual ~Entity() { }  $/
